import logging
import datetime

logging.basicConfig(filename=r'C:/Users/2063661/Documents/0_practice/bing_rewards.log', level=logging.INFO)
logging.info('\n')
logging.info(datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S'))

from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
CHROME_DRIVER_ADDRESS = r'C:\Users\2063661\Documents\chromedriver-win64\chrome'
import time

import numpy as np
import pandas as pd
from pandas.io.formats.style import Styler
import re

options = webdriver.ChromeOptions()
options.add_argument('--headless')
options.add_experimental_option('excludeSwitches', ['disable-popup-blocking'])
options.add_argument('--window-size=1920x1080')
webdriver_address = r'C:\Users\2063661\Documents\chromedriver-win64\chrome'
services = webdriver.chrome.service.Service(webdriver_address)

driver = webdriver.Chrome(service=services, options=options)
user_agent0 = driver.execute_script('return navigator.userAgent;')
print(user_agent0)
user_agent1 = user_agent0.replace('Headless', '')
print(user_agent1)

logging.info(datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S'))

##### Edge Bing #####

EDGE_DRIVER_ADDRESS = r'C:\Users\2063661\Documents\edgedriver\msedgedriver'

def edge():
    options_edge = webdriver.EdgeOptions()
    options_edge.add_argument('--headless')
    # options_edge.add_experimental_option('excludeSwitches', ['disable-popup-blocking'])
    # options_edge.add_argument('--window-size=1920x1080')
    services_edge = webdriver.edge.service.Service(EDGE_DRIVER_ADDRESS)

    driver = webdriver.Edge(service=services_edge, options=options_edge)
    user_agent0 = driver.execute_script('return navigator.userAgent;')
    print(user_agent0)
    user_agent1 = user_agent0.replace('Headless', '')
    print(user_agent1)
    driver.close()
    driver.quit()

    options_hl = webdriver.EdgeOptions()
    # options_hl.add_argument('--headless')
    options_hl.add_argument('user-agent=' + user_agent1)
    # options_hl.add_experimental_option('excludeSwitches', ['disable-popup-blocking'])
    # options_hl.add_argument('--window-size=1920x1080')
    # options_hl.add_argument('--disable-dev-shm-usage')

    driver = webdriver.Edge(service=services_edge, options=options_hl)
    driver.get('https://login.live.com')

    WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME , 'loginfmt')))
    driver.find_element(By.NAME, 'loginfmt').send_keys('regpath@gmail.com')
    WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.ID , 'idSIButton9')))
    time.sleep(2)
    driver.find_element(By.ID, 'idSIButton9').click()

    WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME , 'passwd')))
    driver.find_element(By.NAME, 'passwd').send_keys('ghlrnl04')
    WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.ID , 'idSIButton9')))
    time.sleep(2)
    driver.find_element(By.ID , 'idSIButton9').click()

    WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.XPATH, "//input[@value='예']")))
    WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.ID , 'idSIButton9')))
    time.sleep(2)
    driver.find_element(By.ID, 'idSIButton9').click()

    print("Edge Log-in success")
    logging.info ("Edge Log-in success")
    
    time.sleep(5)

    driver.get('https://rewards.bing.com')
    WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.XPATH, "//p[contains(@class, 'pointsValue')]")))
    points_list0 = driver.find_elements(By.XPATH, "//p[contains(@class, 'pointsValue')]")
    time.sleep(10)
    points_list0 = driver.find_elements(By.XPATH, "//p[contains(@class, 'pointsValue')]")
    points_list1 = [item.text for item in points_list0]
    print(points_list1)
    logging.info(points_list1)

    time.sleep(5)
    
    search_terms = ['Messi', 'Ronaldo', 'Microsoft', 'Paris', 'hynix', 'BERT', 'GPT', 'Baltimore', 'chicken', 'statistics', 'puzzle', 'weather', 'Vietnam', 'transformer', 'encoding', \
        'nltk', 'python', 'microsoft', 'facebook', 'regular', 'normlization', 'tokenization', 'sentence', 'colab', 'anaconda', 'padding', 'token', 'count', 'probability', 'document', \
        'cosine', 'regression', 'machine', 'learning', 'deep', 'neural', 'convolutional', 'account', 'desktop', 'laptop', 'computer', 'phone', 'tablet', 'ipad', 'android', \
        'drone'] # 15, 30, 45, 46

    for i, term in enumerate(search_terms):
        driver.get('https://www.bing.com/search?q=' + term)
        time.sleep(5)

    driver.get('https://rewards.bing.com')
    WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.XPATH, "//p[contains(@class, 'pointsValue')]")))
    points_list0 = driver.find_elements(By.XPATH, "//p[contains(@class, 'pointsValue')]")
    time.sleep(10)
    points_list0 = driver.find_elements(By.XPATH, "//p[contains(@class, 'pointsValue')]")
    points_list1 = [item.text for item in points_list0]
    print(points_list1)
    logging.info(points_list1)

    driver.close()
    driver.quit()
    return None

try:
    edge()
    logging.info("Edge Success")
except:
    logging.info("Edge Failure")
    try:
        edge()
        logging.info("Edge Success")
    except:
        logging.info("Edge Failure")
    
logging.info(datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S'))

########## Mobile ##########

def mobile():

    options_hl = webdriver.ChromeOptions()
    mobile_emulation = {"deviceName": "Nexus 5"}
    # options_hl.add_argument('--headless') # Commenting this out solved the error. 2023-05-17
    options_hl.add_argument('--user-agent=Mozilla/5.0 (iPhone; CPU iPhone OS 10_3 like Mac OS X) AppleWebKit/602.1.50 (KHTML, like Gecko) CriOS/56.0.2924.75 Mobile/14E5239e Safari/602.1')
    options_hl.add_experimental_option('excludeSwitches', ['disable-popup-blocking'])
    options_hl.add_experimental_option("mobileEmulation", mobile_emulation)
    options_hl.add_argument('--window-size=1920x1080')
    # options_hl.add_argument('--disable-dev-shm-usage')

    driver = webdriver.Chrome(service=services, options=options_hl)
    driver.get('https://login.live.com')

    WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME , 'loginfmt')))
    driver.find_element(By.NAME, 'loginfmt').send_keys('regpath@gmail.com')
    WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.ID , 'idSIButton9')))
    time.sleep(2)
    driver.find_element(By.ID, 'idSIButton9').click()

    WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME , 'passwd')))
    driver.find_element(By.NAME, 'passwd').send_keys('ghlrnl04')
    WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.ID , 'idSIButton9')))
    try:
        driver.find_element(By.ID , 'idSIButton9').click()
    except:
        time.sleep(3)
        driver.find_element(By.ID , 'idSIButton9').click()

    WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.XPATH, "//input[@value='예']")))
    WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.ID , 'idSIButton9')))
    driver.find_element(By.ID, 'idSIButton9').click()

    print("Mobile Log-in success")
    logging.info ("Mobile Log-in success")

    time.sleep(5)
    
    driver.get('https://rewards.bing.com')
    WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.XPATH, "//p[contains(@class, 'pointsValue')]")))
    points_list0 = driver.find_elements(By.XPATH, "//p[contains(@class, 'pointsValue')]")
    time.sleep(5)
    points_list0 = driver.find_elements(By.XPATH, "//p[contains(@class, 'pointsValue')]")
    points_list1 = [item.text for item in points_list0]
    print(points_list1)
    logging.info(points_list1)

    time.sleep(5)
    
    search_terms = ['Messi', 'Ronaldo', 'Microsoft', 'Paris', 'hynix', 'BERT', 'GPT', 'Baltimore', 'chicken', 'statistics', 'puzzle', 'weather', 'Vietnam', 'transformer', 'encoding', \
        'nltk', 'python', 'microsoft', 'facebook', 'regular', 'normlization', 'tokenization', 'sentence', 'colab', 'anaconda', 'padding', 'token', 'count', 'probability', 'document', \
        'cosine', 'regression', 'machine', 'learning', 'deep', 'neural', 'convolutional', 'account', 'desktop', 'laptop', 'computer', 'phone', 'tablet', 'ipad', 'android', \
        'drone']

    for i, term in enumerate(search_terms):
        driver.get('https://www.bing.com/search?q=' + term)
        time.sleep(4)
        print(i, end = ' ')
        
    driver.get('https://rewards.bing.com')
    WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.XPATH, "//p[contains(@class, 'pointsValue')]")))
    points_list0 = driver.find_elements(By.XPATH, "//p[contains(@class, 'pointsValue')]")
    time.sleep(10)
    points_list0 = driver.find_elements(By.XPATH, "//p[contains(@class, 'pointsValue')]")
    points_list1 = [item.text for item in points_list0]
    print(points_list1)
    logging.info(points_list1)

    driver.close()
    driver.quit()
    return None

try:
    mobile()
    logging.info("Mobile Success")
except:
    logging.info("Mobile Failure")
    try:
        mobile()
        logging.info("Mobile Success")
    except:
        logging.info("Mobile Failure")

logging.info(datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S'))

########## Desktop ##########

def desktop():

    options_hl = webdriver.ChromeOptions()
    # options_hl.add_argument('--headless')
    options_hl.add_argument('user-agent=' + user_agent1)
    options_hl.add_experimental_option('excludeSwitches', ['disable-popup-blocking'])
    options_hl.add_argument('--window-size=1920x1080')
    # options_hl.add_argument('--disable-dev-shm-usage')

    driver = webdriver.Chrome(service=services, options=options_hl)
    driver.get('https://login.live.com')

    WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME , 'loginfmt')))
    driver.find_element(By.NAME, 'loginfmt').send_keys('regpath@gmail.com')
    WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.ID , 'idSIButton9')))
    time.sleep(2)
    driver.find_element(By.ID, 'idSIButton9').click()
    WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME , 'passwd')))
    driver.find_element(By.NAME, 'passwd').send_keys('ghlrnl04')
    WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.ID , 'idSIButton9')))
    time.sleep(2)
    driver.find_element(By.ID , 'idSIButton9').click()

    WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.XPATH, "//input[@value='예']")))
    WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.ID , 'idSIButton9')))
    time.sleep(2)
    driver.find_element(By.ID, 'idSIButton9').click()
    print("Desktop Log-in success")
    logging.info ("Desktop Log-in success")

    time.sleep(5)
    
    driver.get('https://rewards.bing.com')
    WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.XPATH, "//p[contains(@class, 'pointsValue')]")))
    points_list0 = driver.find_elements(By.XPATH, "//p[contains(@class, 'pointsValue')]")
    time.sleep(10)
    points_list0 = driver.find_elements(By.XPATH, "//p[contains(@class, 'pointsValue')]")
    points_list1 = [item.text for item in points_list0]
    print(points_list1)
    logging.info(points_list1)

    time.sleep(5)
    
    search_terms = ['Messi', 'Ronaldo', 'Microsoft', 'Paris', 'hynix', 'BERT', 'GPT', 'Baltimore', 'chicken', 'statistics', 'puzzle', 'weather', 'Vietnam', 'transformer', 'encoding', \
        'nltk', 'python', 'microsoft', 'facebook', 'regular', 'normlization', 'tokenization', 'sentence', 'colab', 'anaconda', 'padding', 'token', 'count', 'probability', 'document', \
        'cosine', 'regression', 'machine', 'learning', 'deep', 'neural', 'convolutional', 'account', 'desktop', 'laptop', 'computer', 'phone', 'tablet', 'ipad', 'android', \
        'drone'] # 15, 30, 45, 46

    for i, term in enumerate(search_terms):
        driver.get('https://www.bing.com/search?q=' + term)
        time.sleep(4)

    driver.get('https://rewards.bing.com')
    WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.XPATH, "//p[contains(@class, 'pointsValue')]")))
    points_list0 = driver.find_elements(By.XPATH, "//p[contains(@class, 'pointsValue')]")
    time.sleep(10)
    points_list0 = driver.find_elements(By.XPATH, "//p[contains(@class, 'pointsValue')]")
    points_list1 = [item.text for item in points_list0]
    print(points_list1)
    logging.info(points_list1)

    driver.close()
    driver.quit()
    return None

try:
    desktop()
    logging.info("Desktop Success")
except:
    logging.info("Desktop Failure")
    try:
        desktop()
        logging.info("Desktop Success")   
    except:
        logging.info("Desktop Failure")
        
logging.info(datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')) 

